<?php

function th_questions_block_block_info() {
  $block['th_questions_block'] = array(
    'info' => t('Ask a question'),
    'cache' => DRUPAL_NO_CACHE,
    'status' => 1,
  );

  $block['th_questions_block_user'] = array(
    'info' => t('User questions as votes'),
    'cache' => DRUPAL_NO_CACHE,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'all-questions' . PHP_EOL . 'all-questions/issue/*' . PHP_EOL,
    'status' => 1,
  );

  return $block;
}

function th_questions_block_block_view($delta='') {

  $block = array();
  if ($delta == 'th_questions_block') {
    $block['subject'] = l(t('Ask a question'), 'ask-a-question');
    $block['content'] = th_questions_block_contents();
  }

  if ($delta == 'th_questions_block_user') {
    global $user;
    if ($user->uid) {
      $block['subject'] = '';
      $block['content'] = th_questions_block_contents_user();
    }

  }
  return $block;
}

function th_questions_block_contents_user() {
  global $user;

  $uid = $user->uid;

  $fid_like = 5;
  $fid_unlike = 6;

  $count_votes = db_query("select
    count(*)
   from
    {flagging}
   where
    {flagging}.uid = $uid and ({flagging}.fid = $fid_like or {flagging}.fid = $fid_unlike)")->fetchField();

  $count_questons = db_query("select
    count(*)
  from
    {node}
   where
    {node}.type = 'question' and {node}.uid = $uid")->fetchField();
  return "<p>$count_votes Votes<br> $count_questons Questons</p>";
}


function th_questions_block_contents() {
  global $user;
  $count_people = db_query("select count(distinct {node}.uid)
  from
    {node}
  where
    {node}.type = 'question' and
    {node}.uid not in (
    select
      {users_roles}.uid
    from
      {users_roles}
    where
      {users_roles}.rid = 3
    )")->fetchField();

  $count_questions = db_query("select count(*)
  from
    {node}
  left join {field_data_field_th_status} on {node}.nid = {field_data_field_th_status}.entity_id
  where
    {node}.type = 'question' and {node}.status = 1 and {field_data_field_th_status}.field_th_status_value = 0 and
    {node}.uid not in (
    select
      {users_roles}.uid
    from
      {users_roles}
    where
      {users_roles}.rid = 3
    )")->fetchField();

  $count_votes = db_query("select sum({flag_counts}.count)
  from
    {flag}
  left join {flag_counts} on {flag}.fid = {flag_counts}.fid
    where
  {flag}.name = 'like_questions' or {flag}.name = 'unlike_questions'")->fetchField();

  $count_votes = is_null($count_votes) ? 0 : $count_votes;

  $text_array = array(
    '@count_people' => $count_people,
    '@count_questions' => format_plural($count_questions, '1 ' . t('question'), '@count ' . t('questions')),
    '@count_votes' => format_plural($count_votes, '1 ' . t('vote'), '@count ' . t('votes')),
  );

  if ($user->uid) {
			return array(
				'#markup' => t("<p>@count_people people have submitted @count_questions and cast @count_votes.</p><b>But what do you think?</b>", $text_array) . "<p>" . l(t('submit a question'), 'ask-a-question'). "<br />" . l(t('view all'), 'all-questions') . "</p>"
			);
  }
  else {
		if ($count_votes) {
			return array(
				'#markup' => t("<p>@count_questions submitted and @count_votes cast!</p>", $text_array) . "<p>" . l(t('submit a question'), 'ask-a-question'). "<br />" . l(t('view all'), 'all-questions') . "</p>"
			);
		} else {
			return array(
				'#markup' => t("<p>@count_questions submitted and 0 votes cast!</p>", $text_array) . "<p>" . l(t('submit a question'), 'ask-a-question'). "<br />" . l(t('view all'), 'all-questions') . "</p>"
			);
		}
  }
}
